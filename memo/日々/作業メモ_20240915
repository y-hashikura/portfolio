■viewのcontext_object_name 
テンプレート側でビューから渡されたデータを参照するための変数名を指定しています。

通常、Djangoのビューは、モデルのデータをテンプレートに渡してHTMLをレンダリングします。この時、ビュー側で取得したオブジェクト（例えば、SkillModel）をテンプレートに渡すために、コンテキスト変数というものを使います。

context_object_name を使うことで、その変数名を明示的に指定できます。


■get_[filed_name]_display
Djangoでは、モデルのフィールドに choices を設定すると、フィールド名に基づいて get_<field_name>_display() という形式のメソッドが自動的に生成されます。
このメソッドは、フィールドに保存されている値（物理値）に対応する表示名（論理名）を返します


■ビューで
get_query_set()で取得したものは自動的にcontext_object_nameで指定した変数に格納される。
ただ複数扱いたいときは
get_context_data()を使うことで、辞書変数みたいに自由に自分で定義した奴をテンプレート側で使うことができるみたい

■ビューでテンプレート名を指定する時
　⇒templatesの部分は不要だよ
　⇒逆に入れておくと参照できなくなるよ

■自分がやろうとしている画面描画後に、動的な動きをさせる場合は、
　⇒詳細表示等。
　⇒javascriptを実装する必要がある、jqueryでもできるけどjavascriptを使うのが主流らしいよ


■cssやjavascriptを変更して反映されないときは
　⇒ctrl+fn+F5で強制リロードをするとキャッシュをクリアする
　⇒どうやらcssやjavascript敬は読込速度向上のために静的ファイルをキャッシュする仕組みがあるらしい

■スキル一覧画面のベースはとりあえずオッケーかなレベル

■次回以降の内容
　⇒モデルフォームを作成して、スキルの登録や更新等を可能とする。

　⇒メモはメモIDを持たせて別のモデル定義を行い、1行ずつのレベル感で定義を可能としてそれを繰り返し表示するようにしようかな


